This file contains information about how to use the scripts..

------------------
------------------
Filename:		thread_lifeSpan_n_average_commentTime_pieChart.py {year} {calc} {time}

Description: 		This script allows you to calculate two things.
			1. The amount of time how long a thread lasted (Difference between thread creation time stamp and the time stamp of the last comment)
			2. The average mean of comment time.. Means, how long it takes until a comment (regardless whether it is a question or not) has been posted within the thread

Arguments:
	
			{year} 		= 		the year which is to be used for the calculation
					=		2009 || 2010 || 2011 || 2012 || 2013 || 2014 || 2015 || 2016

			{calc}		= 		the data you want to calculate
					=		lifespan || comment
					=		lifespan if you want to calculate the lifespan of a thread, comment is when you want to calculate the average mean comment time within the thread


			{time}		=		the time units in which the calculated values will be seperated into.. (necessary for graph plotting)
					=		min || hours || days
					=		min is for minutes, hours is for separation into hours, days is for seperation into days


Usage example: 		python thread_lifeSpan_n_average_commentTime_pieChart.py 2009 lifespan days
------------------
------------------
Filename:		top100_pieChart.py {year} {top / worst}

Description: 		Plots a pie chart containing the top 100 / worst 100 questions of the year and the proportion to the answers they have received from the iAMA host.
Arguments:
	
			{year} 		= 	the year which is to be used for the calculation
					=	2009 || 2010 || 2011 || 2012 || 2013 || 2014 || 2015 || 2016

			{top / worst)	= 	top [top 100] || worst [worst 100]

Usage example: 		python top100_pieChart.py 2009 false
------------------
------------------
Filename:		tier_answered_time_pieChart.py {year} {tier} {time}

Description:		Plots a pie chart containing the arithmetic mean of the iama hosts response time to given questions for tier 1 / tier x / tier any in minutes / hours.
Arguments:

			{year}		=		the year which is to be used for the calculation
					=		2009 || 2010 || 2011 || 2012 || 2013 || 2014 || 2015 || 2016

			{tier}		=		the tier which will be looked at for calculation
					=		1 || x || any
					=		1 only looks at the first tier, x looks on any other tier except tier 1, any looks on all tiers

			{time}		=		the time units in which the calculated values will be seperated into.. (necessary for graph plotting)
					=		min || hours
					=		min is for minutes, hours is for separation into hours

Usage example: 		python tier_answered_time_pieChart.py 2009 x min
------------------
------------------
Filename:		thread_lifeSpan_n_average_commentTime_pieChart.py.py {year} {tier} {time} {plot_x_limit}

Description:		Plots a scatter chart which contains values of the upvotes of answered questions (by the iAMA host) and the repsonse time of the iAma host to those questions
			Additionally Pearsons Ro will be calculated and printed into the plots title bar.
Arguments:

			{year}		=		the year which is to be used for the calculation
					=		2009 || 2010 || 2011 || 2012 || 2013 || 2014 || 2015 || 2016

			{tier}		=		the tier which will be looked at for calculation
					=		1 || x || any
					=		1 only looks at the first tier, x looks on any other tier except tier 1, any looks on all tiers

			{time}		=		the time units in which the calculated values will be seperated into.. (necessary for graph plotting)
					=		min || hours
					=		min is for minutes, hours is for separation into hours

			{plot_x_limit}	=		limits the plot on the x scale.. Useful if you only want to look at given response times..
					=		0 || (int)
					=		0 means no limit; Any other integer limits the plot to the given number on x scale

Usage example: 		python thread_lifeSpan_n_average_commentTime_pieChart.py.py 2009 any min 300
------------------
------------------
Filename:		tier_answered_percentage_pieChart.py {year} {tier}

Description:		Plots a pieChart which contains the distribution of questions answered per tier for the given year.

Arguments:

			{year}		=		the year which is to be used for the calculation
					=		2009 || 2010 || 2011 || 2012 || 2013 || 2014 || 2015 || 2016

			{tier}		=		the tier which will be looked at for calculation
					=		1 || x || any
					=		1 only looks at the first tier, x looks on any other tier except tier 1, any looks on all tiers

Usage example: 		python tier_answered_percentage_pieChart.py 2009 any
------------------
------------------
Filename:		tier_question_distribution_pieChart.py {year}

Description:		Plots a pieChart which shows the distrubtion of questions on tier 1 and the rest

Arguments:

			{year}		=		the year which is to be used for the calculation
					=		2009 || 2010 || 2011 || 2012 || 2013 || 2014 || 2015 || 2016

Usage example: 		python tier_question_distribution_pieChart.py 2009
------------------
------------------